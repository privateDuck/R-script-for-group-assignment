plot(msleep$awake, msleep$sleep_total)
corr(msleep$awake, msleep$sleep_total)
?plot
plot(cars)
plot(lowess(cars))
gg <- lowess(cars)
gg$x
gg$y
plot(gg,cars)
plot(gg)
plot(cars)
plot(gg)
plot(cars)
?ggplot
gg %>% ggplot(mapping = aes(x = x))+geom_bar()
cars
cars %>% ggplot(mapping = aes(x = dist))+geom_bar()
cars %>% ggplot(mapping = aes(x = dist))+geom_histogram()
cars %>% ggplot(mapping = aes(x = dist, y = speed))+geom_histogram()
cars %>% ggplot(mapping = aes(x = dist, y = speed))+geom_line()
cars %>% ggplot(mapping = aes(x = dist, y = speed))+geom_scatter()
cars %>% ggplot(mapping = aes(x = dist, y = speed))+geom_scatter()
cars %>% ggplot(mapping = aes(x = dist, y = speed))+geom_bar()
cars %>% ggplot(mapping = aes(x = dist, y = speed))+geom_line()
ggplot(mapping = aes(x = gg%x, y = gg%x))+geom_line()
ggplot(mapping = aes(x = gg%x, y = gg%y))+geom_line()
ggplot(data = gg, mapping = aes(x = x, y = y))+geom_line()
dat <- data.frame(gg$x,gg$y)
ggplot(data = dat, mapping = aes(x = x, y = y))+geom_line()
dat
ggplot(data = dat, mapping = aes(x = gg.x, y = gg.y))+geom_line()
starwars %>% ggplot(aes(height,mass,color=sex)) + geom_density(alpha = 0.2)+theme_bw()
starwars %>% drop_na() %>% ggplot(aes(height,mass,color=sex)) + geom_density(alpha = 0.2)+theme_bw()
starwars %>% drop_na(height) %>% ggplot(aes(height,mass,color=sex,fill=sex)) + geom_density(alpha = 0.2)+theme_bw()
starwars$sex <- as.factor(starwars$sex)
starwars %>% drop_na(height) %>% ggplot(aes(height,mass,color=sex,fill=sex)) + geom_density(alpha = 0.2)+theme_bw()
starwars %>% drop_na(height) %>% filter(sex %in% c("male","female")) %>% ggplot(aes(height,mass,color=sex,fill=sex)) + geom_density(alpha = 0.2)+theme_bw()
starwars %>% drop_na(height) %>% filter(sex %in% c("male","female")) %>% ggplot(aes(height,mass,color=sex,fill=sex)) + geom_density(alpha = 0.2)+theme_bw()
starwars %>% drop_na(height) %>% filter(sex %in% c("male","female")) %>% ggplot(aes(height,mass,color=sex,fill=sex))+geom_density()+theme_bw()
starwars %>% drop_na(height) %>% filter(sex %in% c("male","female")) %>% ggplot(aes(x=height,y=mass,color=sex,fill=sex))+geom_density()+theme_bw()
starwars %>% drop_na(height) %>% filter(sex %in% c("male","female")) %>% ggplot(mapping = aes(x=height,y=mass,color=sex,fill=sex))+geom_density()+theme_bw()
starwars %>% drop_na(height) %>% filter(sex %in% c("male","female")) %>% ggplot(aes(x=height,color=sex,fill=sex))+geom_density()+theme_bw()
starwars %>% drop_na(height) %>% filter(sex %in% c("male","female")) %>% ggplot(aes(x=height,color=sex,fill=sex))+geom_density(alpha=0.2)+theme_bw()
starwars %>% drop_na(mass) %>% filter(sex %in% c("male","female")) %>% ggplot(aes(x=mass,color=sex,fill=sex))+geom_density(alpha=0.2)+theme_bw()
starwars %>% drop_na(birth_year) %>% filter(sex %in% c("male","female")) %>% ggplot(aes(x=birth_year,color=sex,fill=sex))+geom_density(alpha=0.2)+theme_bw()
mass
starwars %>% drop_na(mass) %>% filter(sex %in% c("male","female")) %>% ggplot(aes(x=mass,color=sex,fill=sex))+geom_density(alpha=0.2)+theme_bw()
starwars %>% drop_na(mass) %>% filter(sex %in% c("male","female")) %>% ggplot(aes(x=mass,color=sex,fill=sex))+geom_density(alpha=0.2)+theme_bw()
gg <- lm(cars)
plot(gg)
gg
gg %>% summary()
gg %>% aov()
gg %>% aov(formula = dist ~ speed)
aov(formula = cars$dist ~ cars$speed)
q()
getwd()
getwd()
source("E:\\stat ga datat\\script.R")
read.csv("yb_channels_data.csv",HEADERS=TRUE)
read.csv("yb_channels_data.csv",header=TRUE, sep = ",")
df <- read.csv("yb_channels_data.csv",header=TRUE, sep = ",")
summary(df)
plot(df$sub_count,df$total_views)
boxplot(df$sub_count)
boxplot(df$total_views)
df %>% filter(total_views < 5.102e+07) %>% boxplot()
df %>% select(total_views) %>% filter(total_views < 5.102e+07) %>% boxplot()
df %>% select(total_views) %>% filter(total_views < 5.102e+07) %>% view()
tv <- df.select(total_views)
tv <- df$select(total_views)
tv <- select(df$total_views)
summary(df)
summary(df%total_views)
summary(df$total_views)
summary(df$total_views <= 5.102e+07)
su <- summary(df$total_views)
out_up <- su$q3
out_up <- su$3rd.quatile
out_up <- su$quartile[3]
out_up <- su.quartile[3]
su
out_up <- su.3rd.qu
out <- boxplot(df$total_views, plot=FALSE)$out
boxplot(df[-which(df %in% out)])
boxplot(data)
data <- df[-which(df %in% out)]
data <- df[-which(df %in% out)]
boxplot(data)
data
out
data <- df$total_views[-which(df %in% out)]
boxplot(data)
data
data <- df$total_views[-which(df$total_views %in% out)]
data
boxplot(data)
views <- df$total_views
out <- boxplot(views, plot=FALSE)$out
data <- views[-which(views %in% out)]
boxplot(data)
data <- views[!which(views %in% out)]
boxplot(data)
data
write.csv(views, "myFile.csv", row.names = FALSE)
Q1 <- quantile(views, 0.25)
Q3 <- quantile(views, 0.75)
IQR_value <- Q3 - Q1
threshold <- 1.5
views_no <- views[!(views < Q1 - threshold * IQR_value | views > Q3 + threshold * IQR_value)]
boxplot(views_no)
boxplot(views, outline = FALSE, main = "Box Plot without Outliers", ylab = "Your Y-axis Label")
boxplot(views, outline = FALSE, main = "Box Plot without Outliers", ylab = "Your Y-axis Label")
png("bp.png")
boxplot(views, outline = FALSE, main = "Box Plot without Outliers", ylab = "Your Y-axis Label")
dev.off()
df <- read.csv("yb_channels_data.csv",header=TRUE, sep = ",")
df
summary(df)
svv <- c(df$sub_count,df$total_views)
dev.off()
png("bp.png")
summary(svv)
svv <- df[, c("sub_count", "total_views")]
summary(svv)
Q1 <- quantile(svv$sub_count, 0.25)
Q3 <- quantile(views$sub_count, 0.75)
Q3 <- quantile(svv$sub_count, 0.75)
IQR_value <- Q3 - Q1
threshold <- 1.5
svv_no <- svv[!(svv < Q1 - threshold * IQR_value | views > Q3 + threshold * IQR_value),]
summary(svv_no)
plot(svv_no)
dev.off()
plot(svv_no)
boxplot(svv_no$sub_count, outline = FALSE, main = "Box Plot without Outliers", ylab = "Your Y-axis Label")
boxplot(svv$sub_count, outline = FALSE, main = "Box Plot without Outliers", ylab = "Your Y-axis Label")
_no
boxplot(svv_no$sub_count, outline = FALSE, main = "Box Plot without Outliers", ylab = "Your Y-axis Label")
boxplot(svv_no$sub_count, outline = FALSE, main = "Box Plot without Outliers", ylab = "Your Y-axis Label")
svv2 <- svv[svv < 3500,]
plot(svv2)
boxplot(svv2$sub_count, outline = FALSE, main = "Box Plot without Outliers", ylab = "Your Y-axis Label")
boxplot(svv2$sub_count, outline = FALSE, main = "Box Plot without Outliers", ylab = "Your Y-axis Label")
plot(svv2)
boxplot(svv2$total_views, outline = FALSE, main = "Box Plot without Outliers", ylab = "Your Y-axis Label")
svv2
svv2 <- svv[svv < 3500,]
svv2 <- na.omit(svv2)
svv2
plot(svv2)
boxplot(svv2$total_views, outline = FALSE, main = "Box Plot without Outliers", ylab = "Your Y-axis Label")
summary(svv2)
Q1 <- quantile(svv$total_views, 0.25)
Q3 <- quantile(svv$total_views, 0.75)
IQR_value <- Q3 - Q1
threshold <- 1.5
svv2 <- svv[svv < 3500,!(svv < Q1 - threshold * IQR_value | views > Q3 + threshold * IQR_value)]
svv2 <- na.omit(svv2)
summary(svv2)
plot(svv2)
svv2 <- svv[,svv < 1e+08]
svv2 <- na.omit(svv2)
summary(svv2)
plot(svv2)
svv2 <- svv[,svv < 1e+05]
svv2 <- na.omit(svv2)
summary(svv2)
plot(svv2)
svv2 <- svv
svv2 <- na.omit(svv2)
summary(svv2)
plot(svv2)
svv2 <- svv[,svv < 500]
svv2 <- na.omit(svv2)
summary(svv2)
plot(svv2)
svv2 <- svv[svv<500]
svv2 <- na.omit(svv2)
summary(svv2)
plot(svv2)
svv2 <- svv[svv<500,]
svv2 <- na.omit(svv2)
summary(svv2)
plot(svv2)
svv2 <- svv[,svv<500]
svv2 <- na.omit(svv2)
summary(svv2)
plot(svv2)
svv2 <- svv[,svv$total_views<500]
svv2 <- na.omit(svv2)
summary(svv2)
plot(svv2)
svv2 <- svv[svv$total_views < 500, ]
svv2 <- na.omit(svv2)
summary(svv2)
plot(svv2)
svv2 <- svv[svv$total_views < 500 & svv$sub_count < 3500, ]
svv2 <- na.omit(svv2)
summary(svv2)
plot(svv2)
svv2 <- svv[svv$total_views < 1e+6 & svv$sub_count < 3500, ]
svv2 <- na.omit(svv2)
summary(svv2)
plot(svv2)
model <- lm(svv2)
plot(model)
linear_model <- lm(sub_count ~ total_views, data = svv2)
summary(linear_model)
svv <- na.omit(svv)
svv2 <- svv[svv$total_views < 1e+6 & svv$sub_count < 3500, ]
svv2 <- na.omit(svv2)
linear_model <- lm(sub_count ~ total_views, data = svv2)
summary(linear_model)
linear_model <- lm(sub_count ~ total_views, data = svv)
summary(linear_model)
plot(svv)
abline(linear_model, col = "red")
linear_model <- lm(sub_count ~ total_views, data = svv)
plot(svv)
abline(linear_model, col = "red")
library(ggplot2)
ggplot(svv, aes(x = total_views, y = sub_count)) +
  geom_point() +  # Scatter plot of data points
  geom_smooth(method = "lm", se = FALSE, col = "red") +  # Add linear regression line
  labs(title = "Linear Regression Plot", x = "Total Views", y = "Sub Count")
png("total_data.png")
ggplot(svv, aes(x = total_views, y = sub_count)) +
  geom_point() +  # Scatter plot of data points
  geom_smooth(method = "lm", se = FALSE, col = "red") +  # Add linear regression line
  labs(title = "Linear Regression Plot", x = "Total Views", y = "Sub Count")
dev.off()
png("total_data.png", width = 1200, height = 800, res = 300)
ggplot(svv, aes(x = total_views, y = sub_count)) +
  geom_point() +  # Scatter plot of data points
  geom_smooth(method = "lm", se = FALSE, col = "red") +  # Add linear regression line
  labs(title = "Linear Regression Plot", x = "Total Views", y = "Sub Count")
dev.off()
png("total_data.png", width = 1200, height = 1200, res = 500)
ggplot(svv, aes(x = total_views, y = sub_count)) +
  geom_point() +  # Scatter plot of data points
  geom_smooth(method = "lm", se = FALSE, col = "red") +  # Add linear regression line
  labs(title = "Linear Regression Plot", x = "Total Views", y = "Sub Count")
dev.off()
png("total_data.png", width = 1200, height = 1200, res = 100)
# Create a scatter plot with ggplot2
ggplot(svv, aes(x = total_views, y = sub_count)) +
  geom_point() +  # Scatter plot of data points
  geom_smooth(method = "lm", se = FALSE, col = "red") +  # Add linear regression line
  labs(title = "Linear Regression Plot", x = "Total Views", y = "Sub Count")
dev.off()
png("total_data.png", width = 1200, height = 1200, res = 200)
# Create a scatter plot with ggplot2
ggplot(svv, aes(x = total_views, y = sub_count)) +
  geom_point() +  # Scatter plot of data points
  geom_smooth(method = "lm", se = FALSE, col = "red") +  # Add linear regression line
  labs(title = "Linear Regression Plot", x = "Total Views", y = "Sub Count")
dev.off()
png("total_data.png", width = 1200, height = 1200, res = 200)
# Create a scatter plot with ggplot2
ggplot(svv, aes(x = total_views, y = sub_count)) +
  geom_point() +  # Scatter plot of data points
  geom_smooth(method = "lm", se = FALSE, col = "red") +  # Add linear regression line
  labs(title = "Regression with all the observations", x = "Total Views", y = "Sub Count")
dev.off()
linear_model <- lm(sub_count ~ total_views, data = svv2)
png("partial_data.png", width = 1200, height = 1200, res = 200)
# Create a scatter plot with ggplot2
ggplot(svv, aes(x = total_views, y = sub_count)) +
  geom_point() +  # Scatter plot of data points
  geom_smooth(method = "lm", se = FALSE, col = "red") +  # Add linear regression line
  labs(title = "Regression with all the observations", x = "Total Views", y = "Sub Count")
png("partial_data.png", width = 1200, height = 1200, res = 200)
# Create a scatter plot with ggplot2
ggplot(svv2, aes(x = total_views, y = sub_count)) +
  geom_point() +  # Scatter plot of data points
  geom_smooth(method = "lm", se = FALSE, col = "red") +  # Add linear regression line
  labs(title = "Regression with all the observations", x = "Total Views", y = "Sub Count")
dev.off()
svv2 <- svv[svv$total_views < 1e+6 & svv$sub_count < 1e+6, ]
linear_model <- lm(sub_count ~ total_views, data = svv2)
ggplot(svv2, aes(x = total_views, y = sub_count)) +
  geom_point() +  # Scatter plot of data points
  geom_smooth(method = "lm", se = FALSE, col = "red") +  # Add linear regression line
  labs(title = "Regression with all the observations", x = "Total Views", y = "Sub Count")
svv2 <- svv[svv$total_views < 1e+6 & svv$sub_count > 1e+6, ]
linear_model <- lm(sub_count ~ total_views, data = svv2)
ggplot(svv2, aes(x = total_views, y = sub_count)) +
  geom_point() +  # Scatter plot of data points
  geom_smooth(method = "lm", se = FALSE, col = "red") +  # Add linear regression line
  labs(title = "Regression with all the observations", x = "Total Views", y = "Sub Count")
summary(linear_model)
svv2 <- svv[svv$total_views < 1e+6 & svv$sub_count > 1e+5, ]
plot(svv2)
svv2 <- svv[svv$total_views < 1e+6 & svv$sub_count > 1e+4, ]
plot(svv2)
svv2 <- svv[svv$total_views < 1e+6 & svv$sub_count > 2e+4, ]
plot(svv2)
svv2 <- svv[svv$total_views > 1e+6 & svv$sub_count > 2e+4, ]
plot(svv2)
svv2 <- svv[svv$total_views > 1e+6 & svv$sub_count > 2e+6, ]
plot(svv2)
svv2 <- svv[svv$total_views > 1e+6 & svv$sub_count > 1e+7, ]
plot(svv2)
svv2 <- svv[svv$total_views > 1e+6 & svv$sub_count > 1e+8, ]
plot(svv2)
svv2 <- svv[svv$total_views > 1e+6 & svv$sub_count > 5e+7, ]
plot(svv2)
png("high_upper_data.png", width = 1200, height = 1200, res = 200)
ggplot(svv2, aes(x = total_views, y = sub_count)) +
  geom_point() +  # Scatter plot of data points
  geom_smooth(method = "lm", se = FALSE, col = "red") +  # Add linear regression line
  labs(title = "Regression with all the observations", x = "Total Views", y = "Sub Count")
dev.off()
png("high_upper_data.png", width = 1200, height = 1200, res = 200)
ggplot(svv2, aes(x = total_views, y = sub_count)) +
  geom_point() +  # Scatter plot of data points
  geom_smooth(method = "lm", se = FALSE, col = "red") +  # Add linear regression line
  labs(title = "High Outliers", x = "Total Views", y = "Sub Count")
dev.off()
svv2 <- svv[svv$total_views < 1e+6 & svv$sub_count < 3500, ]
plot(svv2)
linear_model <- lm(sub_count ~ total_views, data = svv2)
png("lower_level_obs.png", width = 1200, height = 1200, res = 200)
ggplot(svv2, aes(x = total_views, y = sub_count)) +
  geom_point() +  # Scatter plot of data points
  geom_smooth(method = "lm", se = FALSE, col = "red") +  # Add linear regression line
  labs(title = "High Outliers", x = "Total Views", y = "Sub Count")
dev.off()
png("lower_level_obs.png", width = 1200, height = 1200, res = 200)
ggplot(svv2, aes(x = total_views, y = sub_count)) +
  geom_point() +  # Scatter plot of data points
  geom_smooth(method = "lm", se = FALSE, col = "red") +  # Add linear regression line
  labs(title = "Majority of the observations", x = "Total Views", y = "Sub Count")
dev.off()
linear_model <- lm(total_views ~ sub_count, data = svv)
png("all.png", width = 1200, height = 1200, res = 200)
ggplot(svv2, aes(x = total_views, y = sub_count)) +
  geom_point() +  # Scatter plot of data points
  geom_smooth(method = "lm", se = FALSE, col = "red") +  # Add linear regression line
  labs(title = "All observations", x = "Total Views", y = "Sub Count")
dev.off()
png("all.png", width = 1200, height = 1200, res = 200)
ggplot(svv, aes(x = total_views, y = sub_count)) +
  geom_point() +  # Scatter plot of data points
  geom_smooth(method = "lm", se = FALSE, col = "red") +  # Add linear regression line
  labs(title = "All observations", x = "Total Views", y = "Sub Count")
dev.off()
linear_model <- lm(total_views ~ sub_count, data = svv)
library(ggplot2)
png("all.png", width = 1200, height = 1200, res = 200)
# Create a scatter plot with ggplot2
ggplot(svv, aes(x = sub_count, y = total_views)) +
  geom_point() +  # Scatter plot of data points
  geom_smooth(method = "lm", se = FALSE, col = "red") +  # Add linear regression line
  labs(title = "All observations", x = "Sub Count", y = "Total Views")
dev.off()
svv2 <- svv[svv$total_views < 1e+6 & svv$sub_count < 3500, ]
linear_model <- lm(total_views ~ sub_count, data = svv)
linear_model <- lm(total_views ~ sub_count, data = svv2)
png("all.png", width = 1200, height = 1200, res = 200)
ggplot(svv, aes(x = sub_count, y = total_views)) +
  geom_point() +  # Scatter plot of data points
  geom_smooth(method = "lm", se = FALSE, col = "red") +  # Add linear regression line
  labs(title = "All observations", x = "Sub Count", y = "Total Views")
dev.off()
linear_model <- lm(total_views ~ sub_count, data = svv)
png("all.png", width = 1200, height = 1200, res = 200)
ggplot(svv, aes(x = sub_count, y = total_views)) +
  geom_point() +  # Scatter plot of data points
  geom_smooth(method = "lm", se = FALSE, col = "red") +  # Add linear regression line
  labs(title = "All observations", x = "Sub Count", y = "Total Views")
dev.off()
svv2 <- svv[svv$total_views < 1e+6 & svv$sub_count < 3500, ]
linear_model <- lm(total_views ~ sub_count, data = svv2)
png("low.png", width = 1200, height = 1200, res = 200)
ggplot(svv, aes(x = sub_count, y = total_views)) +
  geom_point() +  # Scatter plot of data points
  geom_smooth(method = "lm", se = FALSE, col = "red") +  # Add linear regression line
  labs(title = "All observations", x = "Sub Count", y = "Total Views")
dev.off()
svv2 <- svv[svv$total_views > 1e+6 & svv$sub_count > 3e+7, ]
linear_model <- lm(total_views ~ sub_count, data = svv2)
png("high.png", width = 1200, height = 1200, res = 200)
ggplot(svv, aes(x = sub_count, y = total_views)) +
  geom_point() +  # Scatter plot of data points
  geom_smooth(method = "lm", se = FALSE, col = "red") +  # Add linear regression line
  labs(title = "All observations", x = "Sub Count", y = "Total Views")
dev.off()
svv2 <- svv[svv$total_views > 1e+6 & svv$sub_count > 3e+7, ]
linear_model <- lm(total_views ~ sub_count, data = svv2)
png("high.png", width = 1200, height = 1200, res = 200)
ggplot(svv, aes(x = sub_count, y = total_views)) +
  geom_point() +  # Scatter plot of data points
  geom_smooth(method = "lm", se = FALSE, col = "red") +  # Add linear regression line
  labs(title = "High outliers", x = "Sub Count", y = "Total Views")
dev.off()
svv2 <- svv[svv$total_views > 1e+6 & svv$sub_count > 5e+7, ]
linear_model <- lm(total_views ~ sub_count, data = svv2)
ggplot(svv, aes(x = sub_count, y = total_views)) +
  geom_point() +  # Scatter plot of data points
  geom_smooth(method = "lm", se = FALSE, col = "red") +  # Add linear regression line
  labs(title = "High outliers", x = "Sub Count", y = "Total Views")
png("high.png", width = 1200, height = 1200, res = 200)
# Create a scatter plot with ggplot2
ggplot(svv, aes(x = sub_count, y = total_views)) +
  geom_point() +  # Scatter plot of data points
  geom_smooth(method = "lm", se = FALSE, col = "red") +  # Add linear regression line
  labs(title = "High outliers", x = "Sub Count", y = "Total Views")
dev.off()
svv2 <- svv[svv$total_views > 1e+6 & svv$sub_count > 3e+7, ]
linear_model <- lm(total_views ~ sub_count, data = svv2)
png("high.png", width = 1200, height = 1200, res = 200)
ggplot(svv2, aes(x = sub_count, y = total_views)) +
  geom_point() +  # Scatter plot of data points
  geom_smooth(method = "lm", se = FALSE, col = "red") +  # Add linear regression line
  labs(title = "High outliers", x = "Sub Count", y = "Total Views")
dev.off()
svv2 <- svv[svv$total_views < 1e+6 & svv$sub_count < 3500, ]
linear_model <- lm(total_views ~ sub_count, data = svv2)
png("low.png", width = 1200, height = 1200, res = 200)
ggplot(svv2, aes(x = sub_count, y = total_views)) +
  geom_point() +  # Scatter plot of data points
  geom_smooth(method = "lm", se = FALSE, col = "red") +  # Add linear regression line
  labs(title = "Majority Observations", x = "Sub Count", y = "Total Views")
dev.off()
install.packages("kableExtra")
library(kableExtra)
library(webshot)
anova_results <- anova(linear_model)
table_output <- kable(anova_results, "html") %>%
  kable_styling(full_width = FALSE) %>%
  as_character()
table_output <- kable(anova_results, format = "html", table.attr = "class='table'")
html_file <- "anova_table.html"
writeLines(table_output, con = html_file)
# Use webshot to capture the HTML file as a PNG image
png_file <- "anova_table.png"
webshot(html_file, file = png_file, zoom = 2)
webshot::install_phantomjs()
table_output <- kable(anova_results, format = "html", table.attr = "class='table'")
html_file <- "anova_table.html"
writeLines(table_output, con = html_file)
png_file <- "anova_table.png"
webshot(html_file, file = png_file, zoom = 2)
anova_results <- aov(linear_model)
anova_results
anova_results <- aov(total_views ~ sub_count, data = svv2)
anova_results
anova_table <- summary(anova_model)
anova_table <- summary(anova_results)
anova_table
SSE <- anova_table$`Sum Sq`["Residuals"]
SSR <- anova_table$`Sum Sq`["independent_var"]
SST <- SSE + SSR
df_residual <- anova_table$"Df"[length(anova_table$"Df")]
df_regression <- anova_table$"Df"[2]
# Calculate mean squares
MSE <- SSE / df_residual
MSR <- SSR / df_regression
# Create a custom table
custom_anova_table <- data.frame(
  Source = c("Regression", "Residuals", "Total"),
  Df = c(df_regression, df_residual, df_regression + df_residual),
  SumSq = c(SSR, SSE, SST),
  MeanSq = c(MSR, MSE, NA),  # NA for Total row
  F.value = c(MSR / MSE, NA, NA),  # NA for Total row
  p.value = c(summary(aov(dependent_var ~ independent_var, data = myData))$"Pr(>F)"[1], NA, NA)  # NA for Total row
)
# Print the custom ANOVA table
print(custom_anova_table)
custom_anova_table <- data.frame(
  Source = c("Regression", "Residuals", "Total"),
  Df = c(df_regression, df_residual, df_regression + df_residual),
  SumSq = c(SSR, SSE, SST),
  MeanSq = c(MSR, MSE, NA),  # NA for Total row
  F.value = c(MSR / MSE, NA, NA),  # NA for Total row
  p.value = c(summary(aov(dependent_var ~ independent_var, data = svv2))$"Pr(>F)"[1], NA, NA)  # NA for Total row
)
custom_anova_table <- data.frame(
  Source = c("Regression", "Residuals", "Total"),
  Df = c(df_regression, df_residual, df_regression + df_residual),
  SumSq = c(SSR, SSE, SST),
  MeanSq = c(MSR, MSE, NA),  # NA for Total row
  F.value = c(MSR / MSE, NA, NA),  # NA for Total row
  p.value = c(summary(aov(total_views ~ sub_count, data = svv2))$"Pr(>F)"[1], NA, NA)  # NA for Total row
)
custom_anova_table <- data.frame(
  Source = c("Regression", "Residuals", "Total"),
  Df = c(df_regression, df_residual, df_regression + df_residual),
  SumSq = c(SSR, SSE, SST),
  MeanSq = c(MSR, MSE, 0),  # NA for Total row
  F.value = c(MSR / MSE, 0, 0),  # NA for Total row
  p.value = c(summary(aov(total_views ~ sub_count, data = svv2))$"Pr(>F)"[1], NA, NA)  # NA for Total row
)
print(custom_anova_table)
custom_anova_table <- data.frame(
  Source = c("Regression", "Residuals", "Total"),
  Df = c(df_regression, df_residual, df_regression + df_residual),
  SumSq = c(SSR, SSE, SST),
  MeanSq = c(MSR, MSE, NA),  # NA for Total row
  F.value = c(MSR / MSE, NA, NA),  # NA for Total row
  p.value = c(summary(aov(total_views ~ sub_count, data = svv2))$"Pr(>F)"[1], NA, NA)  # NA for Total row
)
SSE <- anova_table$`Sum Sq`["Residuals"]
SSR <- anova_table$`Sum Sq`["independent_var"]
SST <- SSE + SSR
df_residual <- anova_table$"Df"[length(anova_table$"Df")]
df_regression <- anova_table$"Df"[2]
df_residual
df_regression 
q()
